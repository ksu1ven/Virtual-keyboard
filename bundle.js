(()=>{"use strict";var e={192:(e,t,n)=>{n.d(t,{Z:()=>C});var r=n(537),a=n.n(r),s=n(645),o=n.n(s),i=n(667),c=n.n(i),l=new URL(n(105),n.b),A=new URL(n(865),n.b),d=o()(a()),u=c()(l),p=c()(A);d.push([e.id,"body{background-image:url("+u+");background-size:auto;background-repeat:no-repeat;margin:0;padding:0;-webkit-touch-callout:none;-webkit-user-select:none;-khtml-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.main{position:absolute;top:50%;left:50%;margin-left:-432.5px;margin-top:-306px}.textarea{display:block;width:850px;border:5px solid #bb6aab;border-radius:8px;height:250px;margin:auto;color:#490d4b;font-size:22px;text-shadow:1px 1px 2px rgba(0,0,0,.5);box-shadow:3px 3px 10px 4px rgba(0,0,0,.5)}.textarea:focus{outline:none}div,p{margin:0;padding:0}.change-language{font-family:Arial,Helvetica,sans-serif;font-size:28px;font-weight:bold;color:#8b0a7c;padding-top:20px;text-align:center;text-shadow:1px 1px 2px rgba(0,0,0,.5)}.keyboard{border:5px solid #fff;border-radius:14px;position:relative;width:850px;display:flex;flex-wrap:wrap;margin:0 auto;column-gap:2px;row-gap:4px;box-shadow:3px 3px 10px 4px rgba(0,0,0,.5)}.key{position:relative;display:flex;justify-content:center;align-items:center;height:50px;background-color:#bb6aab;border:2px solid #fff;border-radius:8px;color:#fff;min-width:50px;font-family:Arial,Helvetica,sans-serif;font-size:16px;font-weight:700;box-shadow:inset -3px -3px 10px 4px rgba(0,0,0,.4);cursor:pointer}.key_topleft-letters{position:absolute;top:2px;left:2px}.key_center-letters{position:absolute;top:20px;left:20px}.slash{position:absolute;top:58px;left:740px;float:right}.key_key-double{width:50px}.backspace,.caps,.shift{width:118px;background-color:#8c447e}.del{margin-left:56px;width:50px;background-color:#8c447e}.tab{width:62px;background-color:#8c447e}.enter{width:106px;background-color:#8c447e}.ctrl{width:70px;background-color:#8c447e}.space{width:358px}.alt,.shift-little,.key_dark{background-color:#8c447e}.active{background-color:#d0b2c4}.animation{animation-duration:1s;animation-name:puma;animation-direction:alternate,reverse,normal}@keyframes puma{0%{transform:scale3d(0.9, 0.9, 0.9);background-image:url("+p+");background-size:2em;background-repeat:no-repeat;background-position:center center;opacity:.5}50%{transform:scale3d(1, 1, 1);background-image:url("+p+");background-size:2.5em;background-repeat:no-repeat;background-position:center center}100%{transform:scale3d(1, 1, 1);background-image:url("+p+");background-size:3em;background-repeat:no-repeat;background-position:center center}}.cat{width:auto;height:100px;position:relative}.hidden{display:none}","",{version:3,sources:["webpack://./src/style.scss"],names:[],mappings:"AAAA,KACI,wDAAA,CACA,oBAAA,CACA,2BAAA,CACA,QAAA,CACA,SAAA,CACA,0BAAA,CACA,wBAAA,CACA,uBAAA,CACA,qBAAA,CACA,oBAAA,CACA,gBAAA,CAEJ,MACI,iBAAA,CACA,OAAA,CACA,QAAA,CACA,oBAAA,CACA,iBAAA,CAGJ,UACI,aAAA,CACA,WAAA,CACA,wBAAA,CACA,iBAAA,CACA,YAAA,CACA,WAAA,CACA,aAAA,CACA,cAAA,CACA,sCAAA,CACA,0CAAA,CAEA,gBACI,YAAA,CAIR,MACI,QAAA,CACA,SAAA,CAGJ,iBACI,sCAAA,CACA,cAAA,CACA,gBAAA,CACA,aAAA,CACA,gBAAA,CACA,iBAAA,CACA,sCAAA,CAGJ,UACI,qBAAA,CACA,kBAAA,CACA,iBAAA,CACA,WAAA,CACA,YAAA,CACA,cAAA,CACA,aAAA,CACA,cAAA,CACA,WAAA,CACA,0CAAA,CAGJ,KACI,iBAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,WAAA,CACA,wBAAA,CACA,qBAAA,CACA,iBAAA,CACA,UAAA,CACA,cAAA,CACA,sCAAA,CACA,cAAA,CACA,eAAA,CACA,kDAAA,CACA,cAAA,CAGJ,qBACI,iBAAA,CACA,OAAA,CACA,QAAA,CAGJ,oBACI,iBAAA,CACA,QAAA,CACA,SAAA,CAGJ,OACI,iBAAA,CACA,QAAA,CACA,UAAA,CACA,WAAA,CAIJ,gBACI,UAAA,CAGJ,wBACI,WAAA,CACA,wBAAA,CAGJ,KACI,gBAAA,CACA,UAAA,CACA,wBAAA,CAGJ,KACI,UAAA,CACA,wBAAA,CAGJ,OACI,WAAA,CACA,wBAAA,CAGJ,MACI,UAAA,CACA,wBAAA,CAGJ,OACI,WAAA,CAGJ,6BACI,wBAAA,CAGJ,QACI,wBAAA,CAGJ,WACI,qBAAA,CACA,mBAAA,CACA,4CAAA,CAGF,gBACE,GACA,gCAAA,CACA,wDAAA,CACA,mBAAA,CACA,2BAAA,CACA,iCAAA,CACA,UAAA,CAEA,IACI,0BAAA,CACA,wDAAA,CACA,qBAAA,CACA,2BAAA,CACA,iCAAA,CAEJ,KACI,0BAAA,CACA,wDAAA,CACA,mBAAA,CACA,2BAAA,CACA,iCAAA,CAAA,CAIR,KACI,UAAA,CACA,YAAA,CACA,iBAAA,CAGJ,QACI,YAAA",sourcesContent:["body {\r\n    background-image:url(./assets/wallpaper-cat.jpg);\r\n    background-size:auto;\r\n    background-repeat: no-repeat;\r\n    margin:0;\r\n    padding:0;\r\n    -webkit-touch-callout: none;\r\n    -webkit-user-select: none;\r\n    -khtml-user-select: none;\r\n    -moz-user-select: none;\r\n    -ms-user-select: none;\r\n    user-select: none;\r\n}\r\n.main{\r\n    position: absolute;\r\n    top: 50%;\r\n    left:50%;\r\n    margin-left: -432.5px;\r\n    margin-top: -306px;\r\n}\r\n\r\n.textarea {\r\n    display: block;\r\n    width: 850px;\r\n    border: 5px solid rgb(187, 106, 171);\r\n    border-radius: 8px;\r\n    height:250px;\r\n    margin: auto;\r\n    color: rgb(73, 13, 75);\r\n    font-size: 22px;\r\n    text-shadow: 1px 1px 2px  rgba(0, 0, 0, 0.5);\r\n    box-shadow: 3px 3px 10px 4px rgba(0, 0, 0, 0.5);\r\n\r\n    &:focus{\r\n        outline:none;\r\n    }\r\n}\r\n\r\ndiv, p {\r\n    margin: 0;\r\n    padding:0;\r\n}\r\n\r\n.change-language {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n    color: rgb(139, 10, 124);\r\n    padding-top: 20px;\r\n    text-align: center;\r\n    text-shadow: 1px 1px 2px  rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.keyboard {\r\n    border:5px solid rgb(255, 255, 255);\r\n    border-radius: 14px;\r\n    position: relative;\r\n    width:850px;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin: 0 auto;\r\n    column-gap: 2px;\r\n    row-gap: 4px;\r\n    box-shadow: 3px 3px 10px 4px rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.key {\r\n    position:relative;\r\n    display:flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 50px;\r\n    background-color: rgb(187, 106, 171);\r\n    border:2px solid rgb(255, 255, 255);\r\n    border-radius: 8px;\r\n    color:white;\r\n    min-width: 50px;\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    box-shadow: inset -3px -3px 10px 4px rgba(0, 0, 0, 0.4);\r\n    cursor: pointer;\r\n}\r\n\r\n.key_topleft-letters {\r\n    position:absolute;\r\n    top:2px;\r\n    left: 2px;\r\n}\r\n\r\n.key_center-letters {\r\n    position:absolute;\r\n    top: 20px;\r\n    left: 20px;\r\n}\r\n\r\n.slash {\r\n    position: absolute;\r\n    top: 58px;\r\n    left:740px;\r\n    float:right;\r\n\r\n}\r\n\r\n.key_key-double {\r\n    width:50px;\r\n}\r\n\r\n.backspace, .caps, .shift{\r\n    width: 118px;\r\n    background-color: rgb(140, 68, 126);\r\n}\r\n\r\n.del {\r\n    margin-left: 56px;\r\n    width:50px;\r\n    background-color: rgb(140, 68, 126);\r\n}\r\n\r\n.tab {\r\n    width: 62px;\r\n    background-color: rgb(140, 68, 126);\r\n}\r\n\r\n.enter {\r\n    width: 106px;\r\n    background-color: rgb(140, 68, 126);\r\n}\r\n\r\n.ctrl {\r\n    width:70px;\r\n    background-color: rgb(140, 68, 126);\r\n}\r\n\r\n.space {\r\n    width:358px;\r\n}\r\n\r\n.alt, .shift-little, .key_dark {\r\n    background-color: rgb(140, 68, 126);\r\n}\r\n\r\n.active {\r\n    background-color: rgb(208, 178, 196);\r\n}\r\n\r\n.animation {\r\n    animation-duration: 1s;\r\n    animation-name: puma;\r\n    animation-direction: alternate, reverse, normal;\r\n  }\r\n\r\n  @keyframes puma {\r\n    0% {\r\n    transform: scale3d(0.9, 0.9, 0.9);\r\n    background-image: url(./assets/mouse.png);\r\n    background-size: 2em;\r\n    background-repeat: no-repeat;\r\n    background-position: center center;\r\n    opacity: 0.5;\r\n    }\r\n    50% {\r\n        transform: scale3d(1.0, 1.0, 1.0);\r\n        background-image: url(./assets/mouse.png);\r\n        background-size: 2.5em;\r\n        background-repeat: no-repeat;\r\n        background-position: center center;\r\n    }\r\n    100% {\r\n        transform: scale3d(1, 1, 1);\r\n        background-image: url(./assets/mouse.png);\r\n        background-size: 3em;\r\n        background-repeat: no-repeat;\r\n        background-position: center center;\r\n    }\r\n}\r\n\r\n.cat{\r\n    width:auto;\r\n    height:100px;\r\n    position: relative;\r\n}\r\n\r\n.hidden {\r\n    display:none;\r\n}"],sourceRoot:""}]);const C=d},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,s){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(r)for(var i=0;i<this.length;i++){var c=this[i][0];null!=c&&(o[c]=!0)}for(var l=0;l<e.length;l++){var A=[].concat(e[l]);r&&o[A[0]]||(void 0!==s&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=s),n&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=n):A[2]=n),a&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=a):A[4]="".concat(a)),t.push(A))}},t}},667:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),s="/*# ".concat(a," */");return[t].concat([s]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var s={},o=[],i=0;i<e.length;i++){var c=e[i],l=r.base?c[0]+r.base:c[0],A=s[l]||0,d="".concat(l," ").concat(A);s[l]=A+1;var u=n(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var C=a(p,r);r.byIndex=i,t.splice(i,0,{identifier:d,updater:C,references:1})}o.push(d)}return o}function a(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var s=r(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<s.length;o++){var i=n(s[o]);t[i].references--}for(var c=r(e,a),l=0;l<s.length;l++){var A=n(s[l]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}s=c}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var s=n.sourceMap;s&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(s))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},865:(e,t,n)=>{e.exports=n.p+"assets/mouse.png"},105:(e,t,n)=>{e.exports=n.p+"assets/wallpaper-cat.jpg"}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={id:r,exports:{}};return e[r](s,s.exports,n),s.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&!e;)e=r[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),a=n.n(r),s=n(569),o=n.n(s),i=n(565),c=n.n(i),l=n(216),A=n.n(l),d=n(589),u=n.n(d),p=n(192),C={};C.styleTagTransform=u(),C.setAttributes=c(),C.insert=o().bind(null,"head"),C.domAPI=a(),C.insertStyleElement=A(),t()(p.Z,C),p.Z&&p.Z.locals&&p.Z.locals;class h{constructor(){this.numbers=["`","1","2","3","4","5","6","7","8","9","0","-","=","&#92;"],this.numbersTop=["~","!","@","#","$","%",":","?","*","(",")","_","+","/"],this.letters=["Backspace","Tab","Q","W","E","R","T","Y","U","I","O","P","[","]","Del","Caps Lock","A","S","D","F","G","H","J","K","L",";","&#8242;","Enter","Shift","&#92;","Z","X","C","V","B","N","M",".",",","/","&#8679;","Shift ","Ctrl","Win","Alt"," ","Alt","Ctrl","&#8678;","&#8681;","&#8658;"],this.lettersRussian=["Backspace","Tab","Й","Ц","У","К","Е","Н","Г","Ш","Щ","З","Х","Ъ","Del","Caps Lock","Ф","Ы","В","А","П","Р","О","Л","Д","Ж","Э","Enter","Shift","&#8217;","Я","Ч","С","М","И","Т","Ь","Б","Ю",".","&#8679;","Shift ","Ctrl","Win","Alt"," ","Alt","Ctrl","&#8678;","&#8681;","&#8658;"],this.idDoublekeys=["Backquote","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Digit9","Digit0","Minus","Equal","Backslash"],this.idLetters=["Backspace","Tab","KeyQ","KeyW","KeyE","KeyR","KeyT","KeyY","KeyU","KeyI","KeyO","KeyP","BracketLeft","BracketRight","Delete","CapsLock","KeyA","KeyS","KeyD","KeyF","KeyG","KeyH","KeyJ","KeyK","KeyL","Semicolon","Quote","Enter","ShiftLeft","/","KeyZ","KeyX","KeyC","KeyV","KeyB","KeyN","KeyM","Comma","Period","Slash","ArrowUp","ShiftRight","ControlLeft","MetaLeft","AltLeft","Space","AltRight","ControlRight","ArrowLeft","ArrowDown","ArrowRight"]}static createElements(){const e=document.createElement("main");document.body.appendChild(e),e.classList.add("main");const t=document.createElement("textarea");e.appendChild(t),t.classList.add("textarea"),t.focus();const n=document.createElement("section");e.appendChild(n),n.classList.add("keyboard");const r=document.createElement("p");e.appendChild(r),r.classList.add("change-language"),r.innerHTML="Press Shift + Alt to change language";const a=new Audio("./assets/myau.mp3");document.body.append(a);const s=document.createElement("img");s.src="./assets/persik.png",document.body.append(s),s.classList.add("cat"),s.classList.add("hidden")}createTopNumbers(){const e=document.querySelector(".keyboard");for(let t=0;t<this.numbers.length;t+=1){const n=document.createElement("div");e.appendChild(n),n.classList.add("key"),n.classList.add("key_double"),n.id=`${this.idDoublekeys[t]}`,"Backquote"===n.id&&n.classList.add("key_dark"),t===this.numbers.length-1&&n.classList.add("slash");const r=document.createElement("p");n.appendChild(r),r.classList.add("key_topleft-letters"),r.innerHTML=`${this.numbersTop[t]}`;const a=document.createElement("p");n.appendChild(a),a.classList.add("key_center-letters"),a.innerHTML=`${this.numbers[t]}`}}createLetters(e,t){this.createTopNumbers();const n=document.querySelector(".keyboard");for(let r=0;r<this.letters.length;r+=1){const a=document.createElement("div");n.appendChild(a),"eng"===e?(a.innerHTML=`${this.letters[r]}`,a.id=`${this.idLetters[r]}`,"ArrowUp"!==a.id&&"ArrowDown"!==a.id&&"ArrowLeft"!==a.id&&"ArrowRight"!==a.id&&"MetaLeft"!==a.id||a.classList.add("key_dark")):(a.innerHTML=`${this.lettersRussian[r]}`,a.id=`${this.idLetters[r]}`,"ArrowUp"!==a.id&&"ArrowDown"!==a.id&&"ArrowLeft"!==a.id&&"ArrowRight"!==a.id&&"MetaLeft"!==a.id||a.classList.add("key_dark")),a.classList.add("key"),"Win"===a.innerHTML?a.classList.add("meta"):"Backspace"===a.innerHTML?a.classList.add("backspace"):"Tab"===a.innerHTML?a.classList.add("tab"):"Del"===a.innerHTML?a.classList.add("del"):"Caps Lock"===a.innerHTML?(a.classList.add("caps"),"on"===t&&a.classList.add("active")):"Enter"===a.innerHTML?a.classList.add("enter"):"Shift"===a.innerHTML?a.classList.add("shift"):"Shift "===a.innerHTML?(a.classList.add("key_dark"),a.classList.add("shift-little")):"Ctrl"===a.innerHTML?a.classList.add("ctrl"):"Alt"===a.innerHTML?a.classList.add("alt"):" "===a.innerHTML?(a.classList.add("space"),a.classList.add("key_letter")):(a.innerHTML.charCodeAt(0)>64&&a.innerHTML.charCodeAt(0)<91||a.innerHTML.charCodeAt(0)>1039&&a.innerHTML.charCodeAt(0)<1072||8217===a.innerHTML.charCodeAt(0)||46===a.innerHTML.charCodeAt(0)||91===a.innerHTML.charCodeAt(0)||93===a.innerHTML.charCodeAt(0)||59===a.innerHTML.charCodeAt(0)||8242===a.innerHTML.charCodeAt(0)||47===a.innerHTML.charCodeAt(0)||44===a.innerHTML.charCodeAt(0)||92===a.innerHTML.charCodeAt(0))&&a.classList.add("key_letter")}}}function g(){const e=document.querySelector("textarea");if(e.focus(),e.selectionStart)return e.selectionStart;if(document.selection){const t=document.selection.createRange(),n=t.duplicate();return t.collapse(!0),n.moveToElementText(e),n.setEndPoint("EndToEnd",t),n.text.length}return 0}function f(e){const t=document.querySelector(".cat");t.style.top=`${e.top+10}px`,t.style.left=e.left+e.width/2-10+"px",t.classList.remove("hidden"),setTimeout((()=>{t.classList.add("hidden")}),1e3)}class m{static highlighAndInputLetters(e,t){const n=document.querySelector(".textarea");n.focus();const r=document.querySelectorAll(".key"),a=g(),s=[...r].find((t=>t.id===e.code));void 0!==s&&("MetaLeft"!==s.id?((!e.shiftKey&&s.classList.contains("key_letter")&&"off"===t||"on"===t&&e.shiftKey&&s.classList.contains("key_letter"))&&(e.preventDefault(),n.value=n.value.slice(0,a)+s.innerHTML.toLowerCase()+n.value.slice(a,n.value.length),n.selectionStart=a+1,n.selectionEnd=a+1),(e.shiftKey&&s.classList.contains("key_letter")&&"off"===t||"on"===t&&!e.shiftKey&&s.classList.contains("key_letter"))&&(e.preventDefault(),n.value=n.value.slice(0,a)+s.innerHTML+n.value.slice(a,n.value.length),n.selectionStart=a+1,n.selectionEnd=a+1),!e.shiftKey&&s.classList.contains("key_double")&&(e.preventDefault(),n.value=n.value.slice(0,a)+s.lastChild.innerHTML+n.value.slice(a,n.value.length),n.selectionStart=a+1,n.selectionEnd=a+1),e.shiftKey&&s.classList.contains("key_double")&&(e.preventDefault(),n.value=n.value.slice(0,a)+s.firstChild.innerHTML+n.value.slice(a,n.value.length),n.selectionStart=a+1,n.selectionEnd=a+1),s.classList.contains("tab")&&(e.preventDefault(),n.value=`${n.value.slice(0,a)}\t${n.value.slice(a,n.value.length)}`,n.selectionStart=a+1,n.selectionEnd=a+1),s.classList.add("active"),s.classList.add("animation"),f(s.getBoundingClientRect()),document.querySelector("audio").play()):e.preventDefault())}static removeAnimationFromKeys(e,t){const n=[...document.querySelectorAll(".key")].find((t=>t.id===e.code));n&&(n.classList.contains("caps")&&"on"===t||(n.classList.remove("active"),setTimeout((()=>n.classList.remove("animation")),1e3)))}}class b{static mouseDown(e,t){const n=document.querySelector(".textarea"),r=e.target.closest("div"),a=g();if(r){if(r.classList.add("active"),r.classList.contains("caps")||((!e.shiftKey&&r.classList.contains("key_letter")&&"off"===t||"on"===t&&e.shiftKey&&r.classList.contains("key_letter"))&&(n.value=n.value.slice(0,a)+r.innerHTML.toLowerCase()+n.value.slice(a,n.value.length),n.selectionStart=a+1,n.selectionEnd=a+1),(e.shiftKey&&r.classList.contains("key_letter")&&"off"===t||"on"===t&&!e.shiftKey&&r.classList.contains("key_letter"))&&(n.value=n.value.slice(0,a)+r.innerHTML+n.value.slice(a,n.value.length),n.selectionStart=a+1,n.selectionEnd=a+1)),!e.shiftKey&&r.classList.contains("key_double")&&(n.value=n.value.slice(0,a)+r.lastChild.innerHTML+n.value.slice(a,n.value.length),n.selectionStart=a+1,n.selectionEnd=a+1),e.shiftKey&&r.classList.contains("key_double")&&(n.value=n.value.slice(0,a)+r.firstChild.innerHTML+n.value.slice(a,n.value.length),n.selectionStart=a+1,n.selectionEnd=a+1),r.classList.contains("enter")&&(n.value=`${n.value.slice(0,a)}\n${n.value.slice(a,n.value.length)}`,n.selectionStart=a+1,n.selectionEnd=a+1),r.classList.contains("tab")&&(n.value=`${n.value.slice(0,a)}\t${n.value.slice(a,n.value.length)}`,n.selectionStart=a+1,n.selectionEnd=a+1),r.classList.contains("backspace")){if(n.focus(),0===n.selectionStart)return;n.selectionEnd!==a?(n.value=n.value.slice(0,n.selectionStart)+n.value.slice(n.selectionEnd,n.value.length),n.selectionStart=a,n.selectionEnd=a):(n.value=n.value.slice(0,a-1)+n.value.slice(a,n.value.length),n.selectionStart=a-1,n.selectionEnd=a-1)}r.classList.contains("del")&&(n.focus(),n.selectionEnd!==a?(n.value=n.value.slice(0,n.selectionStart)+n.value.slice(n.selectionEnd,n.value.length),n.selectionStart=a,n.selectionEnd=a):(n.value=n.value.slice(0,a)+n.value.slice(a+1,n.value.length),n.selectionStart=a,n.selectionEnd=a)),"ArrowLeft"===r.id&&(n.selectionStart=a-1,n.selectionEnd=a-1),"ArrowRight"===r.id&&(n.selectionStart=a+1,n.selectionEnd=a+1),"ArrowUp"!==r.id&&"ArrowDown"!==r.id||b.arrowUpDown(r.id)}}static mouseUp(){document.querySelector(".textarea").focus(),document.querySelectorAll(".key").forEach((e=>{e.classList.contains("caps")||e.classList.remove("active")}))}static arrowUpDown(e){const t=document.querySelector(".textarea"),n=t.value.split("\n"),r=[],a=[];n.forEach((e=>{r.push(e.split(""))}));const s=g();let o=0,i=0;for(let e=0;e<r.length;e+=1){e>0&&(i+=1),a.push([]);for(let t=0;t<r[e].length;t+=1)a[e].push(i),i+=1;a[e].push(i)}for(let n=0;n<r.length;n+=1)for(let i=0;i<r[n].length+1;i+=1){if(o===s){if("ArrowUp"===e){if(0===n)return;t.selectionStart=a[n-1][i]>=0?a[n-1][i]:a[n-1][r[n-1].length],t.selectionEnd=a[n-1][i]>=0?a[n-1][i]:a[n-1][r[n-1].length]}if("ArrowDown"===e){if(n===r.length-1)return;t.selectionStart=a[n+1][i]||a[n+1][r[n+1].length],t.selectionEnd=a[n+1][i]||a[n+1][r[n+1].length]}}o+=1}}}const v=new class{constructor(){this.view=new h,this.lang=localStorage.getItem("a_saved")||"ru",this.caps="off"}createKeyboard(){h.createElements(),this.view.createLetters(this.lang,this.caps)}addEvents(){let e=new Set;const t=document.querySelector(".keyboard");document.addEventListener("keydown",(t=>{e.add(t.key),"CapsLock"===t.key&&("off"===this.caps?this.caps="on":(this.caps="off",document.querySelector("#CapsLock").classList.remove("active"))),m.highlighAndInputLetters(t,this.caps)})),document.addEventListener("keyup",(t=>{(e.has("Alt")&&e.has("Shift")||e.has("AltGraph")&&e.has("Shift"))&&this.changeLang(),m.removeAnimationFromKeys(t,this.caps),e=new Set})),t.addEventListener("mousedown",(e=>{b.mouseDown(e,this.caps);const t=e.target.closest("div");t&&t.classList.contains("caps")&&("off"===this.caps?this.caps="on":(this.caps="off",t.classList.remove("active")))})),t.addEventListener("mouseup",(()=>b.mouseUp())),t.addEventListener("click",(e=>{e.target.closest("div")&&(e.target.closest("div").classList.add("animation"),f(e.target.closest("div").getBoundingClientRect()),document.querySelector("audio").play(),setTimeout((()=>e.target.closest("div").classList.remove("animation")),1e3))}))}changeLang(){document.querySelector(".keyboard").innerHTML="","ru"===this.lang?this.lang="eng":this.lang="ru",localStorage.setItem("a_saved",this.lang),this.view.createLetters(this.lang),"on"===this.caps&&document.querySelector("#CapsLock").classList.add("active")}};v.createKeyboard(),v.addEvents()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,